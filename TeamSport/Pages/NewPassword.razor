@page "/new-password"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS

@* <div class="logo-top-right">
    <a href="/">
        <img src="/img/logo 1.png" alt="Logo" />
    </a>
</div> *@

<div class="reset-password-container">
    <div class="left-side">
        <!-- Có thể chèn ảnh hoặc màu nền ở đây -->
    </div>

    <div class="right-side">
        <div class="form-title">Đặt mật khẩu mới</div>
        <div class="form-subtitle">
            Mật khẩu trước đó của bạn đã được đặt lại. Vui lòng đặt mật khẩu mới cho tài khoản của bạn.
        </div>

        <EditForm Model="@passwordModel" OnValidSubmit="HandlePasswordSubmit">
            <InputText class="single-input" type="password" placeholder="Mật khẩu mới" @bind-Value="passwordModel.NewPassword" />
            <InputText class="single-input" type="password" placeholder="Nhập lại mật khẩu mới" @bind-Value="passwordModel.ConfirmPassword" />

            <button type="submit" class="btn-register" disabled="@IsLoading">
                @(IsLoading ? "Đang xử lý..." : "Đặt mật khẩu mới")
            </button>
        </EditForm>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <p style="color:red;">@ErrorMessage</p>
        }
    </div>
</div>

@code {
    private PasswordModel passwordModel = new();
    private bool IsLoading = false;
    private string ErrorMessage;

    private async Task HandlePasswordSubmit()
    {
        ErrorMessage = null;

        if (passwordModel.NewPassword != passwordModel.ConfirmPassword)
        {
            ErrorMessage = "Mật khẩu không khớp.";
            return;
        }

        IsLoading = true;

        try
        {
            // Thông tin gửi lên API, tùy backend yêu cầu gì thì truyền thêm
            var requestData = new
            {
                newPassword = passwordModel.NewPassword,
                // Nếu cần token reset hoặc email, có thể thêm ở đây
            };

            // Gửi POST lên API đổi mật khẩu
            var response = await Http.PostAsJsonAsync("https://api.example.com/api/auth/reset-password", requestData);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();

                if (!string.IsNullOrEmpty(result?.Token))
                {
                    // Lưu token vào localStorage như trang login
                    await JS.InvokeVoidAsync("localStorage.setItem", "jwtToken", result.Token);

                    // Điều hướng về trang chủ hoặc trang mong muốn
                    Navigation.NavigateTo("/");
                }
                else
                {
                    ErrorMessage = "Token không hợp lệ từ server.";
                }
            }
            else
            {
                ErrorMessage = "Đặt mật khẩu mới thất bại. Vui lòng thử lại.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Lỗi kết nối: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }

    public class PasswordModel
    {
        public string NewPassword { get; set; } = "";
        public string ConfirmPassword { get; set; } = "";
    }

    public class LoginResponse
    {
        public string Token { get; set; }
    }
}

<style>
    .reset-password-container {
        display: flex;
        flex-direction: row;
        height: 120px;
        min-height: 90vh;
        font-family: Arial, sans-serif;
        flex-wrap: wrap;
        max-width: 1400px;
        margin: 0 auto;
        /* box-shadow: 0 0 10px rgba(0,0,0,0.1); */
        border-radius: 8px;
        overflow: hidden;
        gap: 100px; /* Thêm dòng này để tạo khoảng cách */
    }

    .left-side {
        flex: 1;
        background: url('/img/newpass.png') no-repeat center center;
        background-size: cover;
        padding: 20px;
        border-top-left-radius: 30px;
        border-top-right-radius: 30px;
        border-bottom-left-radius: 30px;
        border-bottom-right-radius: 30px;
    }

    .right-side {
        flex: 1;
        padding: 20px;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .form-title {
        font-size: 40px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .form-subtitle {
        font-size: 16px;
        color: #666;
        margin-bottom: 30px;
    }

    .single-input {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        font-size: 16px;
    }

    .btn-register {
        padding: 10px 20px;
        width: 100%;
        background-color: #007bff;
        color: white;
        border: none;
        font-size: 16px;
    }

    .social-login {
        display: flex;
        gap: 10px;
        margin-top: 20px;
    }

    .social-btn img {
        width: 24px;
        height: 24px;
    }

    .logo-top-right {
        position: fixed;
        top: 20px;
        right: 30px;
        z-index: 999;
    }

        .logo-top-right img {
            height: 50px;
            width: auto;
            cursor: pointer;
        }

</style>